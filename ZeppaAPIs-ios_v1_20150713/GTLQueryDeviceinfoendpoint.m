/* This file was generated by the ServiceGenerator.
 * The ServiceGenerator is Copyright (c) 2015 Google Inc.
 */

//
//  GTLQueryDeviceinfoendpoint.m
//

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   deviceinfoendpoint/v1
// Description:
//   This is an API
// Classes:
//   GTLQueryDeviceinfoendpoint (5 custom class methods, 6 custom properties)

#import "GTLQueryDeviceinfoendpoint.h"

#import "GTLDeviceinfoendpointCollectionResponseDeviceInfo.h"
#import "GTLDeviceinfoendpointDeviceInfo.h"

@implementation GTLQueryDeviceinfoendpoint

@dynamic cursor, fields, filter, identifier, limit, ordering;

+ (NSDictionary *)parameterNameMap {
  NSDictionary *map =
    [NSDictionary dictionaryWithObject:@"id"
                                forKey:@"identifier"];
  return map;
}

#pragma mark -
#pragma mark Service level methods
// These create a GTLQueryDeviceinfoendpoint object.

+ (id)queryForGetDeviceInfoWithIdentifier:(long long)identifier {
  NSString *methodName = @"deviceinfoendpoint.getDeviceInfo";
  GTLQueryDeviceinfoendpoint *query = [self queryWithMethodName:methodName];
  query.identifier = identifier;
  query.expectedObjectClass = [GTLDeviceinfoendpointDeviceInfo class];
  return query;
}

+ (id)queryForInsertDeviceInfoWithObject:(GTLDeviceinfoendpointDeviceInfo *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"deviceinfoendpoint.insertDeviceInfo";
  GTLQueryDeviceinfoendpoint *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLDeviceinfoendpointDeviceInfo class];
  return query;
}

+ (id)queryForListDeviceInfo {
  NSString *methodName = @"deviceinfoendpoint.listDeviceInfo";
  GTLQueryDeviceinfoendpoint *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLDeviceinfoendpointCollectionResponseDeviceInfo class];
  return query;
}

+ (id)queryForRemoveDeviceInfoWithObject:(GTLDeviceinfoendpointDeviceInfo *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"deviceinfoendpoint.removeDeviceInfo";
  GTLQueryDeviceinfoendpoint *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  return query;
}

+ (id)queryForUpdateDeviceInfoWithObject:(GTLDeviceinfoendpointDeviceInfo *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"deviceinfoendpoint.updateDeviceInfo";
  GTLQueryDeviceinfoendpoint *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLDeviceinfoendpointDeviceInfo class];
  return query;
}

@end

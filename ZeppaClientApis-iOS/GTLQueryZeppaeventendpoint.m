/* This file was generated by the ServiceGenerator.
 * The ServiceGenerator is Copyright (c) 2015 Google Inc.
 */

//
//  GTLQueryZeppaeventendpoint.m
//

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   zeppaeventendpoint/v1
// Description:
//   This is an API
// Classes:
//   GTLQueryZeppaeventendpoint (5 custom class methods, 6 custom properties)

#import "GTLQueryZeppaeventendpoint.h"

#import "GTLZeppaeventendpointCollectionResponseZeppaEvent.h"
#import "GTLZeppaeventendpointZeppaEvent.h"

@implementation GTLQueryZeppaeventendpoint

@dynamic cursor, fields, filter, identifier, limit, ordering;

+ (NSDictionary *)parameterNameMap {
  NSDictionary *map = @{
    @"identifier" : @"id"
  };
  return map;
}

#pragma mark - Service level methods
// These create a GTLQueryZeppaeventendpoint object.

+ (instancetype)queryForGetZeppaEventWithIdentifier:(long long)identifier {
  NSString *methodName = @"zeppaeventendpoint.getZeppaEvent";
  GTLQueryZeppaeventendpoint *query = [self queryWithMethodName:methodName];
  query.identifier = identifier;
  query.expectedObjectClass = [GTLZeppaeventendpointZeppaEvent class];
  return query;
}

+ (instancetype)queryForInsertZeppaEventWithObject:(GTLZeppaeventendpointZeppaEvent *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"zeppaeventendpoint.insertZeppaEvent";
  GTLQueryZeppaeventendpoint *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLZeppaeventendpointZeppaEvent class];
  return query;
}

+ (instancetype)queryForListZeppaEvent {
  NSString *methodName = @"zeppaeventendpoint.listZeppaEvent";
  GTLQueryZeppaeventendpoint *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLZeppaeventendpointCollectionResponseZeppaEvent class];
  return query;
}

+ (instancetype)queryForRemoveZeppaEventWithIdentifier:(long long)identifier {
  NSString *methodName = @"zeppaeventendpoint.removeZeppaEvent";
  GTLQueryZeppaeventendpoint *query = [self queryWithMethodName:methodName];
  query.identifier = identifier;
  return query;
}

+ (instancetype)queryForUpdateZeppaEventWithObject:(GTLZeppaeventendpointZeppaEvent *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"zeppaeventendpoint.updateZeppaEvent";
  GTLQueryZeppaeventendpoint *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLZeppaeventendpointZeppaEvent class];
  return query;
}

@end

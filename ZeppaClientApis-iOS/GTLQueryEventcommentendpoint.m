/* This file was generated by the ServiceGenerator.
 * The ServiceGenerator is Copyright (c) 2015 Google Inc.
 */

//
//  GTLQueryEventcommentendpoint.m
//

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   eventcommentendpoint/v1
// Description:
//   This is an API
// Classes:
//   GTLQueryEventcommentendpoint (4 custom class methods, 6 custom properties)

#import "GTLQueryEventcommentendpoint.h"

#import "GTLEventcommentendpointCollectionResponseEventComment.h"
#import "GTLEventcommentendpointEventComment.h"

@implementation GTLQueryEventcommentendpoint

@dynamic cursor, fields, filter, identifier, limit, ordering;

+ (NSDictionary *)parameterNameMap {
  NSDictionary *map = @{
    @"identifier" : @"id"
  };
  return map;
}

#pragma mark - Service level methods
// These create a GTLQueryEventcommentendpoint object.

+ (instancetype)queryForGetEventCommentWithIdentifier:(long long)identifier {
  NSString *methodName = @"eventcommentendpoint.getEventComment";
  GTLQueryEventcommentendpoint *query = [self queryWithMethodName:methodName];
  query.identifier = identifier;
  query.expectedObjectClass = [GTLEventcommentendpointEventComment class];
  return query;
}

+ (instancetype)queryForInsertEventCommentWithObject:(GTLEventcommentendpointEventComment *)object {
  if (object == nil) {
    GTL_DEBUG_ASSERT(object != nil, @"%@ got a nil object", NSStringFromSelector(_cmd));
    return nil;
  }
  NSString *methodName = @"eventcommentendpoint.insertEventComment";
  GTLQueryEventcommentendpoint *query = [self queryWithMethodName:methodName];
  query.bodyObject = object;
  query.expectedObjectClass = [GTLEventcommentendpointEventComment class];
  return query;
}

+ (instancetype)queryForListEventComment {
  NSString *methodName = @"eventcommentendpoint.listEventComment";
  GTLQueryEventcommentendpoint *query = [self queryWithMethodName:methodName];
  query.expectedObjectClass = [GTLEventcommentendpointCollectionResponseEventComment class];
  return query;
}

+ (instancetype)queryForRemoveEventCommentWithIdentifier:(long long)identifier {
  NSString *methodName = @"eventcommentendpoint.removeEventComment";
  GTLQueryEventcommentendpoint *query = [self queryWithMethodName:methodName];
  query.identifier = identifier;
  return query;
}

@end

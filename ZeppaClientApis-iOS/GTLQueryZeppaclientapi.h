/* This file was generated by the ServiceGenerator.
 * The ServiceGenerator is Copyright (c) 2016 Google Inc.
 */

//
//  GTLQueryZeppaclientapi.h
//

// ----------------------------------------------------------------------------
// NOTE: This file is generated from Google APIs Discovery Service.
// Service:
//   zeppaclientapi/v1
// Description:
//   This is an API
// Classes:
//   GTLQueryZeppaclientapi (45 custom class methods, 12 custom properties)

#if GTL_BUILT_AS_FRAMEWORK
  #import "GTL/GTLQuery.h"
#else
  #import "GTLQuery.h"
#endif

@class GTLZeppaclientapiDeviceInfo;
@class GTLZeppaclientapiEventComment;
@class GTLZeppaclientapiEventTag;
@class GTLZeppaclientapiEventTagFollow;
@class GTLZeppaclientapiInviteGroup;
@class GTLZeppaclientapiKey;
@class GTLZeppaclientapiPhotoInfo;
@class GTLZeppaclientapiZeppaEvent;
@class GTLZeppaclientapiZeppaEventToUserRelationship;
@class GTLZeppaclientapiZeppaFeedback;
@class GTLZeppaclientapiZeppaNotification;
@class GTLZeppaclientapiZeppaUser;
@class GTLZeppaclientapiZeppaUserToUserRelationship;

@interface GTLQueryZeppaclientapi : GTLQuery

//
// Parameters valid on all methods.
//

// Selector specifying which fields to include in a partial response.
@property (nonatomic, copy) NSString *fields;

//
// Method-specific parameters; see the comments below for more information.
//
@property (nonatomic, copy) NSString *cursor;
@property (nonatomic, copy) NSString *deviceType;
@property (nonatomic, copy) NSString *filter;
// identifier property maps to 'id' in JSON (to avoid Objective C's 'id').
@property (nonatomic, assign) long long identifier;
@property (nonatomic, copy) NSString *idToken;
@property (nonatomic, copy) NSString *jsonArgs;
@property (nonatomic, assign) NSInteger limit;
@property (nonatomic, copy) NSString *ordering;
@property (nonatomic, assign) long long relationshipId;
@property (nonatomic, assign) long long requestedParentId;
@property (nonatomic, assign) long long tagId;

#pragma mark - Service level methods
// These create a GTLQueryZeppaclientapi object.

// Method: zeppaclientapi.fetchCurrentZeppaUser
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiZeppaUser.
+ (instancetype)queryForFetchCurrentZeppaUserWithIdToken:(NSString *)idToken;

// Method: zeppaclientapi.fetchZeppaUserInfoByParentId
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiZeppaUserInfo.
+ (instancetype)queryForFetchZeppaUserInfoByParentIdWithIdToken:(NSString *)idToken
                                              requestedParentId:(long long)requestedParentId;

// Method: zeppaclientapi.getClientInfo
//  Required:
//   deviceType:
//      kGTLZeppaclientapiDeviceTypeAndroid: "ANDROID"
//      kGTLZeppaclientapiDeviceTypeIOS: "iOS"
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiClientInfo.
+ (instancetype)queryForGetClientInfoWithDeviceType:(NSString *)deviceType;

// Method: zeppaclientapi.getDeviceInfo
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiDeviceInfo.
+ (instancetype)queryForGetDeviceInfoWithIdentifier:(long long)identifier
                                            idToken:(NSString *)idToken;

// Method: zeppaclientapi.getEventComment
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiEventComment.
+ (instancetype)queryForGetEventCommentWithIdentifier:(long long)identifier
                                              idToken:(NSString *)idToken;

// Method: zeppaclientapi.getEventTagFollow
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiEventTagFollow.
+ (instancetype)queryForGetEventTagFollowWithIdentifier:(long long)identifier
                                                idToken:(NSString *)idToken;

// Method: zeppaclientapi.getZeppaEvent
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiZeppaEvent.
+ (instancetype)queryForGetZeppaEventWithIdentifier:(long long)identifier
                                            idToken:(NSString *)idToken;

// Method: zeppaclientapi.getZeppaNotification
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiZeppaNotification.
+ (instancetype)queryForGetZeppaNotificationWithIdentifier:(long long)identifier
                                                   idToken:(NSString *)idToken;

// Method: zeppaclientapi.getZeppaUserToUserRelationship
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiZeppaUserToUserRelationship.
+ (instancetype)queryForGetZeppaUserToUserRelationshipWithIdToken:(NSString *)idToken
                                                   relationshipId:(long long)relationshipId;

// Method: zeppaclientapi.insertDeviceInfo
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiDeviceInfo.
+ (instancetype)queryForInsertDeviceInfoWithObject:(GTLZeppaclientapiDeviceInfo *)object
                                           idToken:(NSString *)idToken;

// Method: zeppaclientapi.insertEventComment
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiEventComment.
+ (instancetype)queryForInsertEventCommentWithObject:(GTLZeppaclientapiEventComment *)object
                                             idToken:(NSString *)idToken;

// Method: zeppaclientapi.insertEventTag
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiEventTag.
+ (instancetype)queryForInsertEventTagWithObject:(GTLZeppaclientapiEventTag *)object
                                         idToken:(NSString *)idToken;

// Method: zeppaclientapi.insertEventTagFollow
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiEventTagFollow.
+ (instancetype)queryForInsertEventTagFollowWithObject:(GTLZeppaclientapiEventTagFollow *)object
                                               idToken:(NSString *)idToken;

// Method: zeppaclientapi.insertPhotoInfo
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiPhotoInfo.
+ (instancetype)queryForInsertPhotoInfoWithObject:(GTLZeppaclientapiPhotoInfo *)object
                                          idToken:(NSString *)idToken;

// Method: zeppaclientapi.insertZeppaEvent
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiZeppaEvent.
+ (instancetype)queryForInsertZeppaEventWithObject:(GTLZeppaclientapiZeppaEvent *)object
                                           idToken:(NSString *)idToken;

// Method: zeppaclientapi.insertZeppaEventToUserRelationship
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiZeppaEventToUserRelationship.
+ (instancetype)queryForInsertZeppaEventToUserRelationshipWithObject:(GTLZeppaclientapiZeppaEventToUserRelationship *)object
                                                             idToken:(NSString *)idToken;

// Method: zeppaclientapi.insertZeppaFeedback
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiZeppaFeedback.
+ (instancetype)queryForInsertZeppaFeedbackWithObject:(GTLZeppaclientapiZeppaFeedback *)object
                                              idToken:(NSString *)idToken;

// Method: zeppaclientapi.insertZeppaUser
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiZeppaUser.
+ (instancetype)queryForInsertZeppaUserWithObject:(GTLZeppaclientapiZeppaUser *)object
                                          idToken:(NSString *)idToken;

// Method: zeppaclientapi.insertZeppaUserToUserRelationship
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiZeppaUserToUserRelationship.
+ (instancetype)queryForInsertZeppaUserToUserRelationshipWithObject:(GTLZeppaclientapiZeppaUserToUserRelationship *)object
                                                            idToken:(NSString *)idToken;

#pragma mark - "inviteGroupEndpoint" methods
// These create a GTLQueryZeppaclientapi object.

// Method: zeppaclientapi.inviteGroupEndpoint.insertInviteGroup
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiInviteGroup.
+ (instancetype)queryForInviteGroupEndpointInsertInviteGroupWithObject:(GTLZeppaclientapiInviteGroup *)object;

#pragma mark - Service level methods
// These create a GTLQueryZeppaclientapi object.

// Method: zeppaclientapi.listDeviceInfo
//  Optional:
//   cursor: NSString
//   filter: NSString
//   limit: NSInteger
//   ordering: NSString
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiCollectionResponseDeviceInfo.
+ (instancetype)queryForListDeviceInfoWithIdToken:(NSString *)idToken;

// Method: zeppaclientapi.listEventComment
//  Optional:
//   cursor: NSString
//   filter: NSString
//   limit: NSInteger
//   ordering: NSString
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiCollectionResponseEventComment.
+ (instancetype)queryForListEventCommentWithIdToken:(NSString *)idToken;

// Method: zeppaclientapi.listEventTag
//  Optional:
//   cursor: NSString
//   filter: NSString
//   limit: NSInteger
//   ordering: NSString
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiCollectionResponseEventTag.
+ (instancetype)queryForListEventTagWithIdToken:(NSString *)idToken;

// Method: zeppaclientapi.listEventTagFollow
//  Optional:
//   cursor: NSString
//   filter: NSString
//   limit: NSInteger
//   ordering: NSString
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiCollectionResponseEventTagFollow.
+ (instancetype)queryForListEventTagFollowWithIdToken:(NSString *)idToken;

// Method: zeppaclientapi.listInviteGroup
//  Optional:
//   cursor: NSString
//   filter: NSString
//   limit: NSInteger
//   ordering: NSString
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiCollectionResponseInviteGroup.
+ (instancetype)queryForListInviteGroupWithIdToken:(NSString *)idToken;

// Method: zeppaclientapi.listPhotoInfo
//  Optional:
//   cursor: NSString
//   limit: NSInteger
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiCollectionResponsePhotoInfo.
+ (instancetype)queryForListPhotoInfoWithIdToken:(NSString *)idToken;

// Method: zeppaclientapi.listZeppaEvent
//  Optional:
//   cursor: NSString
//   filter: NSString
//   limit: NSInteger
//   ordering: NSString
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiCollectionResponseZeppaEvent.
+ (instancetype)queryForListZeppaEventWithIdToken:(NSString *)idToken;

// Method: zeppaclientapi.listZeppaEventToUserRelationship
//  Optional:
//   cursor: NSString
//   filter: NSString
//   limit: NSInteger
//   ordering: NSString
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiCollectionResponseZeppaEventToUserRelationship.
+ (instancetype)queryForListZeppaEventToUserRelationshipWithIdToken:(NSString *)idToken;

// Method: zeppaclientapi.listZeppaNotification
//  Optional:
//   cursor: NSString
//   filter: NSString
//   limit: NSInteger
//   ordering: NSString
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiCollectionResponseZeppaNotification.
+ (instancetype)queryForListZeppaNotificationWithIdToken:(NSString *)idToken;

// Method: zeppaclientapi.listZeppaUserInfo
//  Optional:
//   cursor: NSString
//   filter: NSString
//   jsonArgs: NSString
//   limit: NSInteger
//   ordering: NSString
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiCollectionResponseZeppaUserInfo.
+ (instancetype)queryForListZeppaUserInfoWithIdToken:(NSString *)idToken;

// Method: zeppaclientapi.listZeppaUserToUserRelationship
//  Optional:
//   cursor: NSString
//   filter: NSString
//   limit: NSInteger
//   ordering: NSString
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiCollectionResponseZeppaUserToUserRelationship.
+ (instancetype)queryForListZeppaUserToUserRelationshipWithIdToken:(NSString *)idToken;

// Method: zeppaclientapi.removeCurrentZeppaUser
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
+ (instancetype)queryForRemoveCurrentZeppaUserWithIdToken:(NSString *)idToken;

// Method: zeppaclientapi.removeDeviceInfo
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
+ (instancetype)queryForRemoveDeviceInfoWithIdentifier:(long long)identifier
                                               idToken:(NSString *)idToken;

// Method: zeppaclientapi.removeEventTag
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
+ (instancetype)queryForRemoveEventTagWithTagId:(long long)tagId
                                        idToken:(NSString *)idToken;

// Method: zeppaclientapi.removeEventTagFollow
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
+ (instancetype)queryForRemoveEventTagFollowWithIdentifier:(long long)identifier
                                                   idToken:(NSString *)idToken;

// Method: zeppaclientapi.removePhotoInfo
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
+ (instancetype)queryForRemovePhotoInfoWithObject:(GTLZeppaclientapiKey *)object
                                          idToken:(NSString *)idToken;

// Method: zeppaclientapi.removeZeppaEvent
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
+ (instancetype)queryForRemoveZeppaEventWithIdentifier:(long long)identifier
                                               idToken:(NSString *)idToken;

// Method: zeppaclientapi.removeZeppaEventToUserRelationship
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
+ (instancetype)queryForRemoveZeppaEventToUserRelationshipWithIdentifier:(long long)identifier
                                                                 idToken:(NSString *)idToken;

// Method: zeppaclientapi.removeZeppaNotification
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
+ (instancetype)queryForRemoveZeppaNotificationWithIdentifier:(long long)identifier
                                                      idToken:(NSString *)idToken;

// Method: zeppaclientapi.removeZeppaUserToUserRelationship
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
+ (instancetype)queryForRemoveZeppaUserToUserRelationshipWithIdentifier:(long long)identifier
                                                                idToken:(NSString *)idToken;

// Method: zeppaclientapi.updateDeviceInfo
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiDeviceInfo.
+ (instancetype)queryForUpdateDeviceInfoWithObject:(GTLZeppaclientapiDeviceInfo *)object
                                           idToken:(NSString *)idToken;

// Method: zeppaclientapi.updateZeppaEventToUserRelationship
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiZeppaEventToUserRelationship.
+ (instancetype)queryForUpdateZeppaEventToUserRelationshipWithObject:(GTLZeppaclientapiZeppaEventToUserRelationship *)object
                                                             idToken:(NSString *)idToken;

// Method: zeppaclientapi.updateZeppaNotification
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiZeppaNotification.
+ (instancetype)queryForUpdateZeppaNotificationWithObject:(GTLZeppaclientapiZeppaNotification *)object
                                                  idToken:(NSString *)idToken;

// Method: zeppaclientapi.updateZeppaUser
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiZeppaUser.
+ (instancetype)queryForUpdateZeppaUserWithObject:(GTLZeppaclientapiZeppaUser *)object
                                          idToken:(NSString *)idToken;

// Method: zeppaclientapi.updateZeppaUserToUserRelationship
//  Authorization scope(s):
//   kGTLAuthScopeZeppaclientapiUserinfoEmail
// Fetches a GTLZeppaclientapiZeppaUserToUserRelationship.
+ (instancetype)queryForUpdateZeppaUserToUserRelationshipWithObject:(GTLZeppaclientapiZeppaUserToUserRelationship *)object
                                                            idToken:(NSString *)idToken;

@end
